<?xml version="1.0" encoding="UTF-8"?>


<!-- ====================================================================== 
     Feb 9, 2013 7:22:28 PM                                                        

     soa_simulator    
     A little test sender thing to send simulated event messages
                       
     prhodes                                                                
     ====================================================================== -->
<project name="camel-jms" default="compile">
    
	<description>
    	A little test sender thing to send simulated event messages
    </description>

	<path id="build.classpath">
		<fileset dir="lib">
	        <include name="**/*.jar"/>
	      </fileset>
	</path>	
	
	<path id="groovy.classpath">
		<fileset dir="/usr/groovy/groovy-2.3.11/embeddable/">
			<include name="**/*.jar" />
		</fileset>
	</path>
	
	<taskdef name="groovyc"
         classname="org.codehaus.groovy.ant.Groovyc" classpathref="groovy.classpath" />
	
	
    <!-- ================================= 
          target: default              
         ================================= -->
    <target name="init" description="init">
    	<mkdir dir="build" />
    	<mkdir dir="build/conf" />
    	<mkdir dir="build/classes" />
    	<mkdir dir="dist" />
    </target>

    <!-- - - - - - - - - - - - - - - - - - 
          target: clean                      
         - - - - - - - - - - - - - - - - - -->
    <target name="clean">
    	<delete dir="build" />
    	<delete dir="dist" />
    </target>	
	
	
    <!-- - - - - - - - - - - - - - - - - - 
          target: compile                      
         - - - - - - - - - - - - - - - - - -->
    <target name="compile">
        <groovyc srcdir="src" destdir="build/classes" >
        	<classpath refid="build.classpath" />
		</groovyc>    
    </target>

    <!-- - - - - - - - - - - - - - - - - - 
          target: package                      
         - - - - - - - - - - - - - - - - - -->
    <target name="package">
    	
    	
		<!-- create a property containing all .jar files, prefix lib/, and seperated with a space -->
		<pathconvert property="libs.project" pathsep=" ">
			<mapper>
			  	<chainedmapper>
			  		<!-- remove absolute path -->
			    	<flattenmapper />
			 
			        <!-- add lib/ prefix -->
			    	<globmapper from="*" to="lib/*" />
			  	</chainedmapper>
			</mapper>
			 
			<path>
				<!-- lib.home contains all jar files, in several subdirectories -->
			 	<fileset dir="lib">
			    	<include name="**/*.jar" />
				</fileset>
			</path>
		</pathconvert>
    	
    	
    	<!-- create jar file -->
    	<jar basedir="build/classes" destfile="build/camel-jms.jar" >
    		<manifest>
    		      <attribute name="Built-By" value="${user.name}" />
    		      <attribute name="Main-Class" value="org.fogbeam.hatteras.soa_simulator.SOASimulatorMain" />
    		      <!-- finally, use the magically generated libs path -->
    		      <attribute name="Class-Path" value="${libs.project}" />
    		    </manifest>    		
    	</jar>
    	
    	<!-- copy files for final structure into build, create .zip bundle in dist -->
    	
    	<copy todir="build/conf">
    		<fileset dir="src">
    			<include name="applicationContext.xml" />
    			<include name="senderContext.xml" />
    		</fileset>
    	</copy>
    	
    	<copy todir="build/messages">
    		<fileset dir="messages">
    			<include name="*.xml" />
    		</fileset>
    	</copy>
    	
    	<copy todir="build/lib">
    		<fileset dir="lib">
    			<include name="*.jar" />
    		</fileset>
    		<fileset dir="lib/jboss-client">
    			<include name="*.jar" />
    		</fileset>
    		<fileset dir="/usr/groovy/groovy-2.3.11/embeddable/">
    			<include name="groovy-all-2.3.11.jar" />
    		</fileset>
    	</copy>
    	
    	<copy todir="build">
    		<fileset dir=".">
    			<include name="test*.xml" />
    		</fileset>
    	</copy>
    	
    	<zip destfile="dist/soa_simulator.zip">	
    		<fileset dir="build" includes="**/*" excludes="classes/"/>
    	</zip>	
    	
    </target>	
	
	
</project>
